# 1, 2, 3 더하기 4

# idea
# dp 긴 한데, 1로 끝나는 수, 2로 끝나는 수, 3으로 끝나는 수 갯수를 세어야 한다.
# 7은 6에 1을 붙이거나, 5에 2를 붙이거나, 4에 3을 붙이는 건데,
# 6에 1은 모두 붙일 수 있지만, 5에 2를 붙이는 건 1로 끝나지 않을 때만 가능.
# 특히 4에 3을 붙이는 건 3으로 끝날 때만 가능. 이외에는 모두 겹친다.
# 따라서, dp 를 각 갯수를 따로 세어 가면서 진행하면 풀 수 있는 문제.

N = int(input())
array = [int(input()) for _ in range(N)]  # 들어오는 모든 수를 list 에 저장.
array_max = max(array) + 1  # 최댓값에 1을 더해줌. indexing 편하게 하려고.

dp = [0] * array_max  # 최댓값 + 1 만큼 list 만들고,
dp[1] = [1, 0, 0]
dp[2] = [1, 1, 0]
dp[3] = [2, 0, 1]  # dp 적용 안되는 값에 미리 값 설정.

for i in range(4, array_max):  # 끝까지 반복하면서
    end_1 = sum(dp[i - 1])  # 1로 끝나는 숫자 갯수(= dp[i - 1] 의 갯수) 세기.
    end_2 = dp[i - 2][1] + dp[i - 2][2]  # 1로 끝나지 않는 숫자 갯수(= dp[i - 2] 의 1로 끝나지 않는 수의 갯수) 세기.
    end_3 = 0

    if not i % 3:  # 3으로 끝나는 숫자 갯수(= dp[i - 3] 의 3으로 끝나는 수의 갯수) 세기.
        end_3 = dp[i - 3][2]

    dp[i] = [end_1, end_2, end_3]  # 각 숫자를 list 로 저장.

for j in array:  # 출력은 세 개를 다 더해서 출력하면 된다.
    print(sum(dp[j]))